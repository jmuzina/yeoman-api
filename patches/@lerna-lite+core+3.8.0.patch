diff --git a/node_modules/@lerna-lite/core/dist/command.js b/node_modules/@lerna-lite/core/dist/command.js
index ad38175..5a070b3 100644
--- a/node_modules/@lerna-lite/core/dist/command.js
+++ b/node_modules/@lerna-lite/core/dist/command.js
@@ -184,7 +184,8 @@ export class Command {
         if (this.commandName !== 'info') {
             chain = chain.then(() => this.project.getPackages());
             chain = chain.then((packages) => {
-                this.packageGraph = new PackageGraph(packages || [], 'allDependencies');
+                const { graphType } = this.options.command?.[this.commandName] ?? {};
+                this.packageGraph = new PackageGraph(packages || [], graphType ?? 'allDependencies');
             });
         }
         return chain;
diff --git a/node_modules/@lerna-lite/core/dist/utils/collect-updates/collect-updates.js b/node_modules/@lerna-lite/core/dist/utils/collect-updates/collect-updates.js
index 3c56f8a..2285571 100644
--- a/node_modules/@lerna-lite/core/dist/utils/collect-updates/collect-updates.js
+++ b/node_modules/@lerna-lite/core/dist/utils/collect-updates/collect-updates.js
@@ -53,13 +53,9 @@ export function collectUpdates(filteredPackages, packageGraph, execOpts, command
     const hasDiff = makeDiffPredicate(committish, execOpts, commandOptions.ignoreChanges, {
         independentSubpackages,
     });
-    const needsBump = !commandOptions.bump || commandOptions.bump.startsWith('pre')
-        ? () => false
-        :
-            (node) => node.prereleaseId;
     const isForced = (node, name) => (forced.has('*') || forced.has(name)) && ((useConventionalGraduate ? node.prereleaseId : true) || forceConventionalGraduate);
     return collectPackages(packages, {
-        isCandidate: (node, name) => isForced(node, name) || needsBump(node) || hasDiff(node),
+        isCandidate: (node, name) => isForced(node, name) || hasDiff(node),
         onInclude: (name) => log.verbose('updated', name),
         excludeDependents,
     });
